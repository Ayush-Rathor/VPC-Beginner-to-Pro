🚀 Deploying and Configuring VPCs with Multiple Subnets Using Management Console

---
🔍 Getting Started with the VPC Dashboard  

# Step 1: Open the AWS Management Console  
1. 🛠️ Find VPC Service:  
   - Check under Find Services or your recently visited services.  
   - Type "VPC" in the search bar and select it.  

2. 🌎 Check Your Region:  
   - Locate your current Region in the upper-right corner of the console (e.g., `us-west-2`, Oregon Region).  
   - Why it matters: VPC is a Region-specific service, so resources are visible only within the selected Region.  

3. 🗂️ View Resources Across Regions:  
   - Click See All Regions in the resource list to view your resources without switching Regions manually.  

4. ⚙️ Default VPC:  
   - Every Region has a default VPC with:  
      - 1 default subnet per Availability Zone (AZ).  
      - Default route tables and resources.  
   - ⚠️ Warning: Avoid deleting the default VPC unless absolutely necessary—it can only be restored by AWS Support.  

---

 🛠️ Creating a VPC from Scratch  

# Step 1: Navigate to Your VPCs  
1. Open the VPC Dashboard.  
2. Select Your VPCs from the left-hand menu.  

# Step 2: Create a New VPC  
1. 🔘 Click Create VPC:  
   - Provide a Name Tag (e.g., `DemoVPC`).  
   - Select the CIDR Block (IP address range).  

2. 📏 Choose CIDR Block:  
   - Example: `10.0.0.0/22` provides 1,024 IPs (range: `10.0.0.0` to `10.0.3.255`).  
   - Rules:  
      - IPv4 range: `/16` (large) to `/28` (small).  
      - Reserved for private use: `10.0.0.0` to `10.255.255.255`.  
   - 💡 Best Practice: Plan for current needs and potential growth (e.g., double your expected usage for the next two years).  

3. 🏗️ Tenancy Options:  
   - Default: Instances can use either shared or dedicated hardware (decided during instance creation).  
   - Dedicated: Forces all instances in the VPC to use dedicated hardware.  
   - Choose Default unless your organization requires hardware isolation.  

4. 🔖 Add Tags (Optional):  
   - Tags help organize and search resources (e.g., `Project: WebApp`).  

5. 🖱️ Click Create VPC:  
   - Wait for the VPC status to update to Available (refresh if needed).  

---

 🌐 Adding a Subnet  

# Step 1: Create a Subnet  
1. Navigate to the Subnets page from the left menu.  
2. 🔘 Click Create Subnet:  
   - Name Tag: Enter a name (e.g., `PublicSubnet1`).  
   - Select VPC: Choose the newly created `DemoVPC`.  

3. 📏 Specify CIDR Block:  
   - Example: `10.0.0.0/25` for 128 IPs.  
   - Important: AWS reserves 5 IPs in every subnet (1st 4 and last).  

4. 📌 Choose Availability Zone (AZ):  
   - Default: No Preference.  
   - For redundancy, assign subsequent subnets to different AZs.  

5. 🖱️ Click Create Subnet:  
   - Verify that the subnet status is Available.  

---

 🌉 Adding Internet Access  

# Step 1: Create an Internet Gateway (IGW)  
1. Navigate to Internet Gateways from the left menu.  
2. 🔘 Click Create Internet Gateway:  
   - Name Tag: Enter a name (e.g., `Demo-IGW`).  
   - Click Create.  

3. 🔗 Attach IGW to VPC:  
   - Select `Demo-IGW` and click Attach to VPC.  
   - Choose `DemoVPC` from the dropdown.  

---

# Step 2: Configure the Route Table  
1. Navigate to Route Tables from the left menu.  
2. 🔘 Create Route Table:  
   - Name Tag: Enter a name (e.g., `DemoVPCPublicRouteTable`).  
   - Select `DemoVPC`.  

3. 🔗 Associate the Subnet:  
   - In the new route table, click Edit Subnet Associations.  
   - Select `PublicSubnet1` and click Save.  

4. 📋 Add Internet Route:  
   - Click Edit Routes in the route table.  
   - Add a new route:  
      - Destination: `0.0.0.0/0` (all internet traffic).  
      - Target: Select `Demo-IGW`.  
   - Click Save Routes.  

---

 🔍 Verifying the Setup  
1. Navigate back to Subnets and select `PublicSubnet1`.  
2. View the Route Table:  
   - Ensure a route exists for `0.0.0.0/0` pointing to the IGW.  
3. ✅ Subnet is now Public:  
   - Ready for public-facing resources (e.g., web servers, load balancers).  

---

By following these steps, you’ve created a functional VPC with a public subnet and internet access, using best practices for scalability and security. 🎉